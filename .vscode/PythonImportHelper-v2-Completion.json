[
    {
        "label": "psycopg2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psycopg2",
        "description": "psycopg2",
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "Error",
        "importPath": "psycopg2",
        "description": "psycopg2",
        "isExtraImport": true,
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "Error",
        "importPath": "psycopg2",
        "description": "psycopg2",
        "isExtraImport": true,
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "getConnection",
        "kind": 2,
        "importPath": "postgre_answer",
        "description": "postgre_answer",
        "peekOfCode": "def getConnection():\n    connection = psycopg2.connect(\n        host='localhost', user='postgres', password='password', database='postgres')\n    return connection\ndef closeConnection(connection):\n    connection.close()\n    print(\"Connection is Closed\")\ndef getCustomer(customer_id):\n    try:\n        connection = getConnection()",
        "detail": "postgre_answer",
        "documentation": {}
    },
    {
        "label": "closeConnection",
        "kind": 2,
        "importPath": "postgre_answer",
        "description": "postgre_answer",
        "peekOfCode": "def closeConnection(connection):\n    connection.close()\n    print(\"Connection is Closed\")\ndef getCustomer(customer_id):\n    try:\n        connection = getConnection()\n        cursor = connection.cursor()\n        query = \"SELECT * FROM CUSTOMER WHERE customer_id = %s\"\n        cursor.execute(query, (customer_id,))\n        records = cursor.fetchall()",
        "detail": "postgre_answer",
        "documentation": {}
    },
    {
        "label": "getCustomer",
        "kind": 2,
        "importPath": "postgre_answer",
        "description": "postgre_answer",
        "peekOfCode": "def getCustomer(customer_id):\n    try:\n        connection = getConnection()\n        cursor = connection.cursor()\n        query = \"SELECT * FROM CUSTOMER WHERE customer_id = %s\"\n        cursor.execute(query, (customer_id,))\n        records = cursor.fetchall()\n        print(\"Printing Records\")\n        for row in records:\n            print(\"Customer ID\", row[0])",
        "detail": "postgre_answer",
        "documentation": {}
    },
    {
        "label": "getConnection",
        "kind": 2,
        "importPath": "starter_code_part2",
        "description": "starter_code_part2",
        "peekOfCode": "def getConnection():\n    # Write Your Code Here\n    connection = psycopg2.connect(\n        dbname = \"postgres\", \n        user = \"postgres\", \n        password = \"Phammer1212\", \n        host = \"localhost\" )\n    return connection\ndef closeConnection(connection):\n    connection.close()",
        "detail": "starter_code_part2",
        "documentation": {}
    },
    {
        "label": "closeConnection",
        "kind": 2,
        "importPath": "starter_code_part2",
        "description": "starter_code_part2",
        "peekOfCode": "def closeConnection(connection):\n    connection.close()\n    print(\"Connection is Closed\")\ndef getCustomer(customer_id):\n    try:\n        connection = getConnection()  # Create a connection using the connection function\n        # Write Your Code Here - Create a cursor object from the connection\n        cursor = connection.cursor()\n        # Write Your Code Here - Create a query variable, by writing a SELECT query to fetch the customer using the customer_id as the filter.\n        query = \"SELECT * FROM CUSTOMER WHERE customer_id = %s\"",
        "detail": "starter_code_part2",
        "documentation": {}
    },
    {
        "label": "getCustomer",
        "kind": 2,
        "importPath": "starter_code_part2",
        "description": "starter_code_part2",
        "peekOfCode": "def getCustomer(customer_id):\n    try:\n        connection = getConnection()  # Create a connection using the connection function\n        # Write Your Code Here - Create a cursor object from the connection\n        cursor = connection.cursor()\n        # Write Your Code Here - Create a query variable, by writing a SELECT query to fetch the customer using the customer_id as the filter.\n        query = \"SELECT * FROM CUSTOMER WHERE customer_id = %s\"\n        cursor.execute(query, (customer_id,))\n        # Write Your Code Here - Create an object that will hold the records, Hint use fetchall()\n        records = cursor.fetchall()",
        "detail": "starter_code_part2",
        "documentation": {}
    }
]